/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { MessageBoard, MessageBoardInterface } from "../MessageBoard";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "MessageAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "addMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllMessages",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getMessageByIndex",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMessageCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c7f806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632024c1b714610051578063319339161461008157806353f5e3801461009f5780636a226a49146100bd575b600080fd5b61006b60048036038101906100669190610438565b6100d9565b60405161007891906104f5565b60405180910390f35b6100896101d0565b6040516100969190610526565b60405180910390f35b6100a76101dc565b6040516100b4919061064d565b60405180910390f35b6100d760048036038101906100d291906107a4565b610324565b005b60606000805490508210610122576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161011990610839565b60405180910390fd5b6000828154811061013657610135610859565b5b90600052602060002001805461014b906108b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610177906108b7565b80156101c45780601f10610199576101008083540402835291602001916101c4565b820191906000526020600020905b8154815290600101906020018083116101a757829003601f168201915b50505050509050919050565b60008080549050905090565b60606000808054905067ffffffffffffffff8111156101fe576101fd610679565b5b60405190808252806020026020018201604052801561023157816020015b606081526020019060019003908161021c5790505b50905060005b60008054905081101561031c576000818154811061025857610257610859565b5b90600052602060002001805461026d906108b7565b80601f0160208091040260200160405190810160405280929190818152602001828054610299906108b7565b80156102e65780601f106102bb576101008083540402835291602001916102e6565b820191906000526020600020905b8154815290600101906020018083116102c957829003601f168201915b50505050508282815181106102fe576102fd610859565b5b6020026020010181905250808061031490610917565b915050610237565b508091505090565b6000815111610368576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035f906109ab565b60405180910390fd5b60008190806001815401808255809150506001900390600052602060002001600090919091909150908161039c9190610b77565b503373ffffffffffffffffffffffffffffffffffffffff167f0e3401fdbf980201cc9ca58087d228bce1d399fc15d0de47a4c4d6a06432622a826040516103e391906104f5565b60405180910390a250565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61041581610402565b811461042057600080fd5b50565b6000813590506104328161040c565b92915050565b60006020828403121561044e5761044d6103f8565b5b600061045c84828501610423565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561049f578082015181840152602081019050610484565b60008484015250505050565b6000601f19601f8301169050919050565b60006104c782610465565b6104d18185610470565b93506104e1818560208601610481565b6104ea816104ab565b840191505092915050565b6000602082019050818103600083015261050f81846104bc565b905092915050565b61052081610402565b82525050565b600060208201905061053b6000830184610517565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b600061058982610465565b610593818561056d565b93506105a3818560208601610481565b6105ac816104ab565b840191505092915050565b60006105c3838361057e565b905092915050565b6000602082019050919050565b60006105e382610541565b6105ed818561054c565b9350836020820285016105ff8561055d565b8060005b8581101561063b578484038952815161061c85826105b7565b9450610627836105cb565b925060208a01995050600181019050610603565b50829750879550505050505092915050565b6000602082019050818103600083015261066781846105d8565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6106b1826104ab565b810181811067ffffffffffffffff821117156106d0576106cf610679565b5b80604052505050565b60006106e36103ee565b90506106ef82826106a8565b919050565b600067ffffffffffffffff82111561070f5761070e610679565b5b610718826104ab565b9050602081019050919050565b82818337600083830152505050565b6000610747610742846106f4565b6106d9565b90508281526020810184848401111561076357610762610674565b5b61076e848285610725565b509392505050565b600082601f83011261078b5761078a61066f565b5b813561079b848260208601610734565b91505092915050565b6000602082840312156107ba576107b96103f8565b5b600082013567ffffffffffffffff8111156107d8576107d76103fd565b5b6107e484828501610776565b91505092915050565b7f496e76616c696420696e64657800000000000000000000000000000000000000600082015250565b6000610823600d83610470565b915061082e826107ed565b602082019050919050565b6000602082019050818103600083015261085281610816565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806108cf57607f821691505b6020821081036108e2576108e1610888565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061092282610402565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610954576109536108e8565b5b600182019050919050565b7f4d6573736167652073686f756c64206e6f7420626520656d7074790000000000600082015250565b6000610995601b83610470565b91506109a08261095f565b602082019050919050565b600060208201905081810360008301526109c481610988565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610a2d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826109f0565b610a3786836109f0565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610a74610a6f610a6a84610402565b610a4f565b610402565b9050919050565b6000819050919050565b610a8e83610a59565b610aa2610a9a82610a7b565b8484546109fd565b825550505050565b600090565b610ab7610aaa565b610ac2818484610a85565b505050565b5b81811015610ae657610adb600082610aaf565b600181019050610ac8565b5050565b601f821115610b2b57610afc816109cb565b610b05846109e0565b81016020851015610b14578190505b610b28610b20856109e0565b830182610ac7565b50505b505050565b600082821c905092915050565b6000610b4e60001984600802610b30565b1980831691505092915050565b6000610b678383610b3d565b9150826002028217905092915050565b610b8082610465565b67ffffffffffffffff811115610b9957610b98610679565b5b610ba382546108b7565b610bae828285610aea565b600060209050601f831160018114610be15760008415610bcf578287015190505b610bd98582610b5b565b865550610c41565b601f198416610bef866109cb565b60005b82811015610c1757848901518255600182019150602085019450602081019050610bf2565b86831015610c345784890151610c30601f891682610b3d565b8355505b6001600288020188555050505b50505050505056fea264697066735822122037f7bc48f8801ae46fc87709a3ec556f2e6a4f7d2a94c056824a1a361ba6161a64736f6c63430008130033";

type MessageBoardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MessageBoardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MessageBoard__factory extends ContractFactory {
  constructor(...args: MessageBoardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MessageBoard & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MessageBoard__factory {
    return super.connect(runner) as MessageBoard__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MessageBoardInterface {
    return new Interface(_abi) as MessageBoardInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MessageBoard {
    return new Contract(address, _abi, runner) as unknown as MessageBoard;
  }
}
