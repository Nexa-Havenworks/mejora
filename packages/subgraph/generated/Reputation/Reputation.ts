// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class GroupAdminUpdated extends ethereum.Event {
  get params(): GroupAdminUpdated__Params {
    return new GroupAdminUpdated__Params(this);
  }
}

export class GroupAdminUpdated__Params {
  _event: GroupAdminUpdated;

  constructor(event: GroupAdminUpdated) {
    this._event = event;
  }

  get groupId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get oldAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class GroupCreated extends ethereum.Event {
  get params(): GroupCreated__Params {
    return new GroupCreated__Params(this);
  }
}

export class GroupCreated__Params {
  _event: GroupCreated;

  constructor(event: GroupCreated) {
    this._event = event;
  }

  get groupId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get depth(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get zeroValue(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class MemberAdded extends ethereum.Event {
  get params(): MemberAdded__Params {
    return new MemberAdded__Params(this);
  }
}

export class MemberAdded__Params {
  _event: MemberAdded;

  constructor(event: MemberAdded) {
    this._event = event;
  }

  get groupId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get identityCommitment(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get root(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class MemberRemoved extends ethereum.Event {
  get params(): MemberRemoved__Params {
    return new MemberRemoved__Params(this);
  }
}

export class MemberRemoved__Params {
  _event: MemberRemoved;

  constructor(event: MemberRemoved) {
    this._event = event;
  }

  get groupId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get identityCommitment(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get root(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class NullifierHashAdded extends ethereum.Event {
  get params(): NullifierHashAdded__Params {
    return new NullifierHashAdded__Params(this);
  }
}

export class NullifierHashAdded__Params {
  _event: NullifierHashAdded;

  constructor(event: NullifierHashAdded) {
    this._event = event;
  }

  get nullifierHash(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ProofVerified extends ethereum.Event {
  get params(): ProofVerified__Params {
    return new ProofVerified__Params(this);
  }
}

export class ProofVerified__Params {
  _event: ProofVerified;

  constructor(event: ProofVerified) {
    this._event = event;
  }

  get groupId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get signal(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class Semaphore extends ethereum.SmartContract {
  static bind(address: Address): Semaphore {
    return new Semaphore("Semaphore", address);
  }

  getDepth(groupId: BigInt): i32 {
    let result = super.call("getDepth", "getDepth(uint256):(uint8)", [
      ethereum.Value.fromUnsignedBigInt(groupId)
    ]);

    return result[0].toI32();
  }

  try_getDepth(groupId: BigInt): ethereum.CallResult<i32> {
    let result = super.tryCall("getDepth", "getDepth(uint256):(uint8)", [
      ethereum.Value.fromUnsignedBigInt(groupId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getNumberOfLeaves(groupId: BigInt): BigInt {
    let result = super.call(
      "getNumberOfLeaves",
      "getNumberOfLeaves(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(groupId)]
    );

    return result[0].toBigInt();
  }

  try_getNumberOfLeaves(groupId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getNumberOfLeaves",
      "getNumberOfLeaves(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(groupId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRoot(groupId: BigInt): BigInt {
    let result = super.call("getRoot", "getRoot(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(groupId)
    ]);

    return result[0].toBigInt();
  }

  try_getRoot(groupId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getRoot", "getRoot(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(groupId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  groupAdmins(param0: BigInt): Address {
    let result = super.call("groupAdmins", "groupAdmins(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_groupAdmins(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "groupAdmins",
      "groupAdmins(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  verifiers(param0: i32): Address {
    let result = super.call("verifiers", "verifiers(uint8):(address)", [
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))
    ]);

    return result[0].toAddress();
  }

  try_verifiers(param0: i32): ethereum.CallResult<Address> {
    let result = super.tryCall("verifiers", "verifiers(uint8):(address)", [
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(param0))
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _verifiers(): Array<ConstructorCall_verifiersStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      ConstructorCall_verifiersStruct
    >();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall_verifiersStruct extends ethereum.Tuple {
  get contractAddress(): Address {
    return this[0].toAddress();
  }

  get merkleTreeDepth(): i32 {
    return this[1].toI32();
  }
}

export class AddMemberCall extends ethereum.Call {
  get inputs(): AddMemberCall__Inputs {
    return new AddMemberCall__Inputs(this);
  }

  get outputs(): AddMemberCall__Outputs {
    return new AddMemberCall__Outputs(this);
  }
}

export class AddMemberCall__Inputs {
  _call: AddMemberCall;

  constructor(call: AddMemberCall) {
    this._call = call;
  }

  get groupId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get identityCommitment(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddMemberCall__Outputs {
  _call: AddMemberCall;

  constructor(call: AddMemberCall) {
    this._call = call;
  }
}

export class CreateGroupCall extends ethereum.Call {
  get inputs(): CreateGroupCall__Inputs {
    return new CreateGroupCall__Inputs(this);
  }

  get outputs(): CreateGroupCall__Outputs {
    return new CreateGroupCall__Outputs(this);
  }
}

export class CreateGroupCall__Inputs {
  _call: CreateGroupCall;

  constructor(call: CreateGroupCall) {
    this._call = call;
  }

  get groupId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get depth(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get zeroValue(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get admin(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class CreateGroupCall__Outputs {
  _call: CreateGroupCall;

  constructor(call: CreateGroupCall) {
    this._call = call;
  }
}

export class RemoveMemberCall extends ethereum.Call {
  get inputs(): RemoveMemberCall__Inputs {
    return new RemoveMemberCall__Inputs(this);
  }

  get outputs(): RemoveMemberCall__Outputs {
    return new RemoveMemberCall__Outputs(this);
  }
}

export class RemoveMemberCall__Inputs {
  _call: RemoveMemberCall;

  constructor(call: RemoveMemberCall) {
    this._call = call;
  }

  get groupId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get identityCommitment(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get proofSiblings(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get proofPathIndices(): Array<i32> {
    return this._call.inputValues[3].value.toI32Array();
  }
}

export class RemoveMemberCall__Outputs {
  _call: RemoveMemberCall;

  constructor(call: RemoveMemberCall) {
    this._call = call;
  }
}

export class UpdateGroupAdminCall extends ethereum.Call {
  get inputs(): UpdateGroupAdminCall__Inputs {
    return new UpdateGroupAdminCall__Inputs(this);
  }

  get outputs(): UpdateGroupAdminCall__Outputs {
    return new UpdateGroupAdminCall__Outputs(this);
  }
}

export class UpdateGroupAdminCall__Inputs {
  _call: UpdateGroupAdminCall;

  constructor(call: UpdateGroupAdminCall) {
    this._call = call;
  }

  get groupId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get newAdmin(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class UpdateGroupAdminCall__Outputs {
  _call: UpdateGroupAdminCall;

  constructor(call: UpdateGroupAdminCall) {
    this._call = call;
  }
}

export class VerifyProofCall extends ethereum.Call {
  get inputs(): VerifyProofCall__Inputs {
    return new VerifyProofCall__Inputs(this);
  }

  get outputs(): VerifyProofCall__Outputs {
    return new VerifyProofCall__Outputs(this);
  }
}

export class VerifyProofCall__Inputs {
  _call: VerifyProofCall;

  constructor(call: VerifyProofCall) {
    this._call = call;
  }

  get groupId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get signal(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get nullifierHash(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get externalNullifier(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get proof(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }
}

export class VerifyProofCall__Outputs {
  _call: VerifyProofCall;

  constructor(call: VerifyProofCall) {
    this._call = call;
  }
}
